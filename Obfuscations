--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==2) then function v22() local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23() local v32,v33=v1(v16,v19,v19 + (5 -3) );v19=v19 + 2 ;return (v33 * (732 -476)) + v32 ;end v18=3;end if (v18==4) then function v25() local v34=0 -(0 -0) ;local v35;local v36;local v37;local v38;local v39;local v40;while true do if ((1 + 1)==v34) then v39=v21(v36,53 -32 ,650 -(555 + 64) );v40=((v21(v36,(1703 -740) -(857 + 74) )==(569 -(367 + 201))) and  -(928 -(214 + 713))) or (181 -((505 -(145 + 293)) + 113)) ;v34=1 + 2 ;end if ((7 -4)==v34) then if (v39==(0 + 0)) then if (v38==((18 -(10 + 8)) + 0)) then return v40 * (877 -(282 + 595)) ;else v39=1638 -(1523 + 114) ;v37=0 -0 ;end elseif (v39==(1840 + 207)) then return ((v38==(0 + 0)) and (v40 * (1/(0 -(0 -0))))) or (v40 * NaN) ;end return v8(v40,v39-(2088 -(68 + 997)) ) * (v37 + (v38/((1272 -(226 + 1044))^(226 -174)))) ;end if (v34==(118 -(32 + 85))) then v37=(1488 -(998 + 488)) -1 ;v38=(v21(v36,1 -0 ,4 + 16 ) * ((2 + 0)^(32 + (442 -(416 + 26))))) + v35 ;v34=2;end if (v34==(0 + 0)) then v35=v24();v36=v24();v34=3 -2 ;end end end v26=nil;function v26(v41) local v42;if  not v41 then local v82=0 + 0 ;while true do if (v82==(0 + 0)) then v41=v24();if (v41==(772 -(201 + (2027 -1456)))) then return "";end break;end end end v42=v3(v16,v19,(v19 + v41) -(1 + 0) );v19=v19 + v41 ;local v43={};for v66=3 -2 , #v42 do v43[v66]=v2(v1(v3(v42,v66,v66)));end return v6(v43);end v18=5;end if (v18==6) then v29=nil;function v29() local v44=574 -(507 + 67) ;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v44==2) then v49=nil;v50=nil;v44=3;end if (v44==3) then v51=nil;while true do local v90=0;while true do if (v90~=(1749 -(1013 + 736))) then else if (v45==(1 + 0)) then v49={v46,v47,nil,v48};v50=v24();v51={};v45=869 -(550 + 317) ;end if (v45==(3 -0)) then local v98=0 -0 ;while true do if (v98~=0) then else for v110=1,v24() do v47[v110-1 ]=v29();end return v49;end end end v90=1;end if (v90==1) then if (v45==0) then local v99=0;while true do if (v99==1) then v48={};v45=1;break;end if (v99~=(0 -0)) then else v46={};v47={};v99=286 -(134 + 151) ;end end end if (v45==2) then for v101=1666 -(970 + 695) ,v50 do local v102=0;local v103;local v104;local v105;while true do if (v102==(0 -0)) then v103=0;v104=nil;v102=1;end if (v102==(1991 -(582 + 1408))) then v105=nil;while true do if (v103~=(0 -0)) then else local v119=0 -0 ;while true do if (0==v119) then v104=v22();v105=nil;v119=1;end if (v119==(3 -2)) then v103=1;break;end end end if (v103==1) then if (v104==(1825 -(1195 + 629))) then v105=v22()~=(0 -0) ;elseif (v104==(243 -(187 + 54))) then v105=v25();elseif (v104==(783 -(162 + 618))) then v105=v26();end v51[v101]=v105;break;end end break;end end end v49[3]=v22();for v106=1,v24() do local v107=0;local v108;local v109;while true do if (v107==(0 + 0)) then v108=0;v109=nil;v107=1 + 0 ;end if (v107==1) then while true do if (v108==0) then v109=v22();if (v21(v109,1 -0 ,1)==0) then local v218=0;local v219;local v220;local v221;local v222;local v223;while true do if (v218==(2 -0)) then v223=nil;while true do if (v219==0) then v220=0 + 0 ;v221=nil;v219=1637 -(1373 + 263) ;end if (v219==(1002 -(451 + 549))) then while true do if (v220==0) then local v325=0 + 0 ;while true do if (v325==1) then v220=1 -0 ;break;end if (0~=v325) then else local v337=0 -0 ;while true do if (v337==(1384 -(746 + 638))) then v221=v21(v109,1 + 1 ,4 -1 );v222=v21(v109,345 -(218 + 123) ,6);v337=1582 -(1535 + 46) ;end if (v337==1) then v325=1 + 0 ;break;end end end end end if (v220==(1 + 0)) then local v326=0;local v327;while true do if (v326~=(560 -(306 + 254))) then else v327=0 + 0 ;while true do if (v327~=0) then else v223={v23(),v23(),nil,nil};if (v221==0) then local v342=0 -0 ;local v343;local v344;local v345;while true do if (v342~=0) then else v343=0;v344=nil;v342=1;end if (v342~=(604 -(268 + 335))) then else v345=nil;while true do if (v343==1) then while true do if (v344==0) then v345=0;while true do if (v345~=0) then else v223[293 -(60 + 230) ]=v23();v223[576 -(426 + 146) ]=v23();break;end end break;end end break;end if (v343==0) then v344=0 + 0 ;v345=nil;v343=1;end end break;end end elseif (v221==(1457 -(282 + 1174))) then v223[3]=v24();elseif (v221==(813 -(569 + 242))) then v223[3]=v24() -(2^16) ;elseif (v221==3) then local v352=0;local v353;local v354;while true do if (v352==(0 -0)) then v353=0 + 0 ;v354=nil;v352=1025 -(706 + 318) ;end if (v352~=(1252 -(721 + 530))) then else while true do if (v353~=(1271 -(945 + 326))) then else v354=0 -0 ;while true do if (v354==0) then v223[3 + 0 ]=v24() -(2^(716 -(271 + 429))) ;v223[4 + 0 ]=v23();break;end end break;end end break;end end end v327=1;end if (v327==(1501 -(1408 + 92))) then v220=2;break;end end break;end end end if (v220~=3) then else if (v21(v222,3,1089 -(461 + 625) )~=(1289 -(993 + 295))) then else v223[4]=v51[v223[1 + 3 ]];end v46[v106]=v223;break;end if (v220~=2) then else local v329=1171 -(418 + 753) ;local v330;while true do if ((0 + 0)~=v329) then else v330=0;while true do if (v330==0) then local v341=0 + 0 ;while true do if (v341==(0 + 0)) then if (v21(v222,1 + 0 ,1)~=(530 -(406 + 123))) then else v223[2]=v51[v223[1771 -(1749 + 20) ]];end if (v21(v222,1 + 1 ,1324 -(1249 + 73) )~=(1 + 0)) then else v223[1148 -(466 + 679) ]=v51[v223[6 -3 ]];end v341=2 -1 ;end if (v341==(1901 -(106 + 1794))) then v330=1;break;end end end if (v330==1) then v220=3;break;end end break;end end end end break;end if (1~=v219) then else local v312=0 + 0 ;while true do if (v312==1) then v219=2;break;end if (v312==(0 + 0)) then v222=nil;v223=nil;v312=2 -1 ;end end end end break;end if (v218==(2 -1)) then v221=nil;v222=nil;v218=2;end if ((114 -(4 + 110))==v218) then v219=0;v220=nil;v218=585 -(57 + 527) ;end end end break;end end break;end end end v45=3;end break;end end end break;end if (v44~=1) then else v47=nil;v48=nil;v44=2;end if (0==v44) then v45=0;v46=nil;v44=1428 -(41 + 1386) ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v52) if (v1(v52,2)==79) then local v83=0;while true do if (v83==0) then v20=v0(v3(v52,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v52,16));if v20 then local v97=v5(v85,v20);v20=nil;return v97;else return v85;end break;end end end end);v18=1;end if (v18==3) then v24=nil;function v24() local v53,v54,v55,v56=v1(v16,v19,v19 + 3 );v19=v19 + ((273 -(122 + 44)) -(17 + 86)) ;return (v56 * (11386758 + 5390458)) + (v55 * (146152 -80616)) + (v54 * (741 -485)) + v53 ;end v25=nil;v18=4;end if (v18==7) then function v30(v57,v58,v59) local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...) local v68=v60;local v69=v61;local v70=v62;local v71=v28;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v87=0;while true do if (v87==1) then if (v81<=29) then if (v81<=14) then if (v81<=6) then if (v81<=2) then if (v81<=0) then local v112=v80[3];local v113=v78[v112];for v121=v112 + 1 ,v80[4] do v113=v113   .. v78[v121] ;end v78[v80[2]]=v113;elseif (v81>1) then v78[v80[2]]=v30(v69[v80[3]],nil,v59);else v78[v80[2]]();end elseif (v81<=4) then if (v81>3) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81==5) then v78[v80[2]]=v78[v80[3]];else v78[v80[2]]=v78[v80[3]];end elseif (v81<=10) then if (v81<=8) then if (v81==7) then local v130=0;local v131;local v132;while true do if (v130==0) then v131=v80[2];v132=v78[v80[3]];v130=1;end if (v130==1) then v78[v131 + 1 ]=v132;v78[v131]=v132[v80[4]];break;end end else local v133=0;local v134;while true do if (v133==0) then v134=v80[2];v78[v134](v13(v78,v134 + 1 ,v80[3]));break;end end end elseif (v81>9) then v78[v80[2]]();else local v135=v80[2];local v136=v78[v135];local v137=v80[3];for v224=1,v137 do v136[v224]=v78[v135 + v224 ];end end elseif (v81<=12) then if (v81>11) then v78[v80[2]][v80[3]]=v80[4];else v78[v80[2]]=v80[3];end elseif (v81==13) then v78[v80[2]]=v59[v80[3]];else for v227=v80[2],v80[3] do v78[v227]=nil;end end elseif (v81<=21) then if (v81<=17) then if (v81<=15) then v72=v80[3];elseif (v81>16) then local v144=v69[v80[3]];local v145;local v146={};v145=v10({},{__index=function(v229,v230) local v231=0;local v232;while true do if (0==v231) then v232=v146[v230];return v232[1][v232[2]];end end end,__newindex=function(v233,v234,v235) local v236=v146[v234];v236[1][v236[2]]=v235;end});for v238=1,v80[4] do local v239=0;local v240;while true do if (v239==1) then if (v240[1]==6) then v146[v238-1 ]={v78,v240[3]};else v146[v238-1 ]={v58,v240[3]};end v77[ #v77 + 1 ]=v146;break;end if (0==v239) then v72=v72 + 1 ;v240=v68[v72];v239=1;end end end v78[v80[2]]=v30(v144,v145,v59);else local v148=v80[2];v78[v148]=v78[v148](v13(v78,v148 + 1 ,v73));end elseif (v81<=19) then if (v81==18) then for v241=v80[2],v80[3] do v78[v241]=nil;end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81==20) then v78[v80[2]]=v80[3];else local v153=0;local v154;local v155;local v156;while true do if (v153==0) then v154=v69[v80[3]];v155=nil;v153=1;end if (v153==2) then for v280=1,v80[4] do local v281=0;local v282;while true do if (1==v281) then if (v282[1]==6) then v156[v280-1 ]={v78,v282[3]};else v156[v280-1 ]={v58,v282[3]};end v77[ #v77 + 1 ]=v156;break;end if (v281==0) then v72=v72 + 1 ;v282=v68[v72];v281=1;end end end v78[v80[2]]=v30(v154,v155,v59);break;end if (v153==1) then v156={};v155=v10({},{__index=function(v283,v284) local v285=v156[v284];return v285[1][v285[2]];end,__newindex=function(v286,v287,v288) local v289=0;local v290;while true do if (0==v289) then v290=v156[v287];v290[1][v290[2]]=v288;break;end end end});v153=2;end end end elseif (v81<=25) then if (v81<=23) then if (v81>22) then local v157=0;local v158;while true do if (0==v157) then v158=v80[2];v78[v158]=v78[v158](v13(v78,v158 + 1 ,v80[3]));break;end end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81>24) then v78[v80[2]]=v80[3]~=0 ;elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=27) then if (v81==26) then local v162=0;local v163;local v164;local v165;local v166;while true do if (v162==0) then v163=v80[2];v164,v165=v71(v78[v163](v13(v78,v163 + 1 ,v80[3])));v162=1;end if (v162==1) then v73=(v165 + v163) -1 ;v166=0;v162=2;end if (v162==2) then for v291=v163,v73 do v166=v166 + 1 ;v78[v291]=v164[v166];end break;end end else local v167=0;local v168;while true do if (0==v167) then v168=v80[2];v78[v168](v78[v168 + 1 ]);break;end end end elseif (v81==28) then local v169=v80[2];v78[v169]=v78[v169](v13(v78,v169 + 1 ,v80[3]));else local v171=v80[2];local v172,v173=v71(v78[v171](v13(v78,v171 + 1 ,v80[3])));v73=(v173 + v171) -1 ;local v174=0;for v243=v171,v73 do local v244=0;while true do if (0==v244) then v174=v174 + 1 ;v78[v243]=v172[v174];break;end end end end elseif (v81<=44) then if (v81<=36) then if (v81<=32) then if (v81<=30) then local v116=v80[3];local v117=v78[v116];for v122=v116 + 1 ,v80[4] do v117=v117   .. v78[v122] ;end v78[v80[2]]=v117;elseif (v81>31) then local v175=v80[2];v78[v175]=v78[v175]();else v78[v80[2]]=v58[v80[3]];end elseif (v81<=34) then if (v81==33) then do return;end else v58[v80[3]]=v78[v80[2]];end elseif (v81>35) then local v181=0;local v182;while true do if (v181==0) then v182=v80[2];v78[v182](v78[v182 + 1 ]);break;end end else v78[v80[2]]=v58[v80[3]];end elseif (v81<=40) then if (v81<=38) then if (v81==37) then local v185=0;local v186;local v187;while true do if (v185==1) then v78[v186 + 1 ]=v187;v78[v186]=v187[v80[4]];break;end if (v185==0) then v186=v80[2];v187=v78[v80[3]];v185=1;end end else local v188=0;local v189;local v190;while true do if (v188==1) then for v296=1, #v77 do local v297=v77[v296];for v300=0, #v297 do local v301=0;local v302;local v303;local v304;while true do if (v301==1) then v304=v302[2];if ((v303==v78) and (v304>=v189)) then local v331=0;while true do if (v331==0) then v190[v304]=v303[v304];v302[1]=v190;break;end end end break;end if (v301==0) then v302=v297[v300];v303=v302[1];v301=1;end end end end break;end if (v188==0) then v189=v80[2];v190={};v188=1;end end end elseif (v81>39) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]={};end elseif (v81<=42) then if (v81>41) then v78[v80[2]]=v59[v80[3]];else do return;end end elseif (v81==43) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v72=v80[3];end elseif (v81<=52) then if (v81<=48) then if (v81<=46) then if (v81>45) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>47) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=50) then if (v81>49) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v58[v80[3]]=v78[v80[2]];end elseif (v81>51) then local v199=v80[2];local v200=v78[v199];for v245=v199 + 1 ,v80[3] do v7(v200,v78[v245]);end else v78[v80[2]]={};end elseif (v81<=56) then if (v81<=54) then if (v81==53) then local v202=v80[2];local v203=v78[v202];local v204=v80[3];for v246=1,v204 do v203[v246]=v78[v202 + v246 ];end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81==55) then local v207=v80[2];v78[v207]=v78[v207](v13(v78,v207 + 1 ,v73));else local v209=v80[2];v78[v209]=v78[v209]();end elseif (v81<=58) then if (v81>57) then v78[v80[2]]=v30(v69[v80[3]],nil,v59);else local v212=v80[2];v78[v212](v13(v78,v212 + 1 ,v80[3]));end elseif (v81>59) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v215=0;local v216;local v217;while true do if (v215==1) then for v298=1, #v77 do local v299=v77[v298];for v305=0, #v299 do local v306=0;local v307;local v308;local v309;while true do if (v306==0) then v307=v299[v305];v308=v307[1];v306=1;end if (v306==1) then v309=v307[2];if ((v308==v78) and (v309>=v216)) then v217[v309]=v308[v309];v307[1]=v217;end break;end end end end break;end if (v215==0) then v216=v80[2];v217={};v215=1;end end end v72=v72 + 1 ;break;end if (v87==0) then v80=v68[v72];v81=v80[1];v87=1;end end end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v63,v64,v65) if v65 then local v88=(v63/((2 -0)^(v64-((7 -4) -(582 -(361 + 219))))))%((2 + 0)^(((v65-(1 + 0)) -(v64-(1 -0))) + (66 -(30 + 35)))) ;return v88-(v88%(1 + 0)) ;else local v89=2^(v64-(1258 -(1043 + 214))) ;return (((v63%(v89 + v89))>=v89) and 1) or (0 -(1212 -(323 + 889))) ;end end v22=nil;v18=2;end end end return vv9(),...);
